{"version":3,"sources":["media/landing-page.PNG","media/minecraft.PNG","media/plan.PNG","components/HomePage.jsx","components/ProjectShowcase.jsx","components/ProjectsPage.jsx","components/Navbar.jsx","components/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","HomePage","className","to","href","useStyles","createUseStyles","demo","padding","backgroundColor","position","borderBottom","width","maxWidth","opacity","transition","alignItems","display","fontSize","top","left","transform","textAlign","color","flexBasis","paddingLeft","paddingRight","ProjectShowcase","title","description","codeLink","siteLink","image","classes","src","alt","ProjectsPage","landingPageImage","minecraftImage","planImage","nav","zIndex","boxShadow","x","y","blur","spread","cursor","visible","withRouter","location","route","pathname","changeBGAtHeight","useState","navBackground","setNavBackground","navRef","useRef","current","useEffect","handleScroll","show","window","scrollY","document","addEventListener","removeEventListener","id","footer","height","translateX","mail","topSymbol","Footer","App","path","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab44ff02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing-page.dc5f0a76.PNG\";","module.exports = __webpack_public_path__ + \"static/media/minecraft.48274dcd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/plan.9abc870c.PNG\";","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nconst HomePage = () => {\r\n    return (\r\n        <div className='hero'>\r\n            <h1 className='header'>Hi, I am Sapir</h1>\r\n            I'm a fulllstack web developer based in Israel.<br />\r\n            I am pasionate about crafting great web apps and servers, and would love to create along with you.\r\n                I am open for job offers and projects.\r\n            <br /><br />\r\n            In the meantime you are welcome to look at stuff I built in <Link to=\"/\">Projects</Link> tab or\r\n        < a href=\"https://github.com/sapirm290\" > My Github </a >\r\n            < br /> <br />\r\n\r\n            Let's chat <a href=\"mailto:sapirm290@gmail.com\">sapirm290@gmail.com</a>\r\n        </div >\r\n    )\r\n}\r\nHomePage.propTypes = {\r\n    setTab: PropTypes.func\r\n};\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { createUseStyles } from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n    demo: {\r\n        padding: '5rem 1rem',\r\n        backgroundColor: '#999',\r\n        position: 'relative',\r\n        borderBottom: [1, 'solid', '#E4E4E4'],\r\n\r\n        '& img': {\r\n            width: '100%',\r\n            maxWidth: '1000px',\r\n            opacity: 1,\r\n            transition: '.5s ease',\r\n\r\n        },\r\n\r\n\r\n        '& div': {\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            width: '100%',\r\n            maxWidth: '650px',\r\n            fontSize: '3rem',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            '-ms-transform': 'translate(-50%, -50%)',\r\n            textAlign: 'center',\r\n            opacity: 0.1,\r\n            color: '#000'\r\n\r\n\r\n        },\r\n        '& .description': {\r\n            flexBasis: '70%'\r\n        },\r\n        '& .link': {\r\n            paddingLeft: '1rem',\r\n            paddingRight: '1rem'\r\n\r\n        },\r\n        '&:nth-child(even)': {\r\n            backgroundColor: '#F7F7F7'\r\n        },\r\n        '&:nth-child(odd)': {\r\n            backgroundColor: '#FFF'\r\n        },\r\n\r\n        '&:hover': {\r\n            '& img': {\r\n                opacity: 0.3,\r\n\r\n            },\r\n            '& div': {\r\n                opacity: 1,\r\n                color: '#333',\r\n                transition: '.5s ease'\r\n\r\n            },\r\n            '& a': {\r\n                opacity: 1,\r\n                color: 'teal',\r\n                transition: '.5s ease'\r\n\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n})\r\n\r\nconst ProjectShowcase = ({ title, description, codeLink, siteLink, image }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <figure className={classes.demo}>\r\n            <img src={image} alt={'sample ' + title} />\r\n            <div >\r\n                <p className='description'>{description}</p>\r\n                <p ><a className='link' href={codeLink}>\r\n                    Code</a> <a className='link' href={siteLink}> Site</a></p>\r\n            </div>\r\n        </figure>\r\n    )\r\n}\r\nProjectShowcase.propTypes = {\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    codeLink: PropTypes.string,\r\n    siteLink: PropTypes.string,\r\n    image: PropTypes.string\r\n};\r\nexport default ProjectShowcase\r\n","import React, {Fragment} from 'react'\r\nimport ProjectDemo from './ProjectShowcase'\r\nimport landingPageImage from '../media/landing-page.PNG'\r\nimport minecraftImage from '../media/minecraft.PNG'\r\nimport planImage from '../media/plan.PNG'\r\n\r\nconst ProjectsPage = () => {\r\n    return (\r\n        <Fragment>\r\n        <div className='hero'>\r\n            <h1 className='header'>How may I be of help to you?</h1>\r\n            <h2 className='sub-header'>I've worked with:</h2>\r\n            Front-end: HTML, CSS, JS, Jquery, Bootstrap, Material-UI, React, Redux<br />Back-end: Python, Django,\r\n            Django-rest. JavaScript, Node.js<br /> Databases: PostgreSQL, MySQl<br /> Deployment: GH-pages, Netlify, Heroku\r\n           \r\n        </div>\r\n\r\n        <div className=\"main-projects\">\r\n        <h2 className='sub-header'>Some of my work:</h2>\r\n\r\n        <ProjectDemo title='landing page' description='Basic HTML & CSS landing page' codeLink='https://github.com/sapirm290/Landing_page' siteLink='https://sapirm290.github.io/Landing_page/'  image={landingPageImage}/>\r\n         <ProjectDemo title='mini minecraft' description='A simple minecraft like game using JS' codeLink='https://github.com/sapirm290/Minecraft' siteLink='https://sapirm290.github.io/Minecraft/' image={minecraftImage} />\r\n         <ProjectDemo title='Todo app' description=' An APP for managing tasks . built using React, Redux, Material UI, Python, Django, Django-rest. includes authentication. hosted on Heroku'\r\n          codeLink='https://github.com/sapirm290/planner' siteLink='https://arcane-cliffs-92152.herokuapp.com/?#/' image={planImage} />\r\n   \r\n        </div>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProjectsPage\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n    Link, withRouter\r\n} from \"react-router-dom\";\r\nimport { createUseStyles } from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = createUseStyles({\r\n    nav: {\r\n        display: 'flex',\r\n        position: 'fixed',\r\n        color: '#fff',\r\n        zIndex: 1,\r\n        width: '100%',\r\n        boxShadow: {\r\n            x: 2,\r\n            y: 5,\r\n            blur: 16,\r\n            spread: -8,\r\n            color: 'rgba(0, 0, 0, 1)'\r\n        },\r\n        '& li': {\r\n            padding: '3rem 1.5rem 1.5rem 3rem',\r\n            cursor: 'pointer',\r\n            fontSize: '3rem',\r\n            display: 'inline-block',\r\n            opacity: 1,\r\n            '& a': {\r\n                color: '#fff'\r\n\r\n            }\r\n        },\r\n        '& .pressed':\r\n        {\r\n            backgroundColor: '#777'\r\n        }\r\n    },\r\n    visible: {\r\n        backgroundColor: '#888'\r\n    }\r\n\r\n})\r\n\r\nconst Navbar = ({ location }) => {\r\n    const classes = useStyles()\r\n    const route = location.pathname\r\n    const changeBGAtHeight = (route === '/' ? 20 : 490)\r\n    const [navBackground, setNavBackground] = useState(false)\r\n    const navRef = useRef()\r\n    navRef.current = navBackground\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            const show = window.scrollY > changeBGAtHeight\r\n            if (navRef.current !== show) {\r\n                setNavBackground(show)\r\n            }\r\n        }\r\n        document.addEventListener('scroll', handleScroll)\r\n        return () => {\r\n            document.removeEventListener('scroll', handleScroll)\r\n        }\r\n    }, [])\r\n    return (\r\n        <nav className={`${navBackground ? classes.visible : ''} ${classes.nav}`}>\r\n            <ul id='nav'>\r\n                <li className={`${route === '/' ? 'pressed' : ''}`} ><Link to=\"/\">About</Link></li>\r\n                <li className={`${route === '/projects' ? 'pressed' : ''}`} ><Link to=\"/projects\">Projects</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    changeBGAtHeight: PropTypes.number,\r\n    location: PropTypes.object\r\n};\r\nexport default withRouter(Navbar)\r\n","import React from 'react'\r\nimport { createUseStyles } from 'react-jss'\r\n\r\nconst useStyles = createUseStyles({\r\n    footer: {\r\n        height: '10rem',\r\n        backgroundColor: '#333',\r\n        position: 'relative',\r\n        textAlign: 'center',\r\n        padding: '2rem',\r\n        translateX: ''\r\n    },\r\n    mail: {\r\n        '& a': {\r\n            color: '#fff'\r\n        }\r\n    },\r\n    topSymbol: {\r\n        display: 'inline-block',\r\n        '-ms-transform': 'translateX(-50%)',\r\n        transform: 'translateX(-50%)',\r\n        position: 'absolute',\r\n        top: '-2.5rem',\r\n        height: '5rem',\r\n        width: '5rem',\r\n        backgroundColor: '#E31B6D'\r\n    }\r\n\r\n})\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <span className={classes.topSymbol}></span>\r\n            <div className='sub-header'>Sapir Malka 2019</div>\r\n            <div className={classes.mail}>\r\n                <a href=\"mailto:sapirm290@gmail.com\">sapirm290@gmail.com</a>\r\n            </div>\r\n        </footer >\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport './main-style.css'\r\nimport HomePage from './components/HomePage'\r\nimport ProjectsPage from './components/ProjectsPage'\r\nimport Navbar from './components/Navbar'\r\nimport Footer from './components/Footer'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <main className=\"my-container\">\r\n          <Switch>\r\n            <Route path=\"/projects\">\r\n              <ProjectsPage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}