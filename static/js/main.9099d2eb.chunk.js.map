{"version":3,"sources":["components/HomePage.jsx","components/ProjectDemo/ProjectDemo.jsx","components/Projects.jsx","App.js","serviceWorker.js","index.js","media/landing-page.PNG","media/minecraft.PNG","media/plan.PNG"],"names":["HomePage","className","href","useStyles","createUseStyles","demo","padding","backgroundColor","position","borderBottom","opacity","color","transition","width","maxWidth","text","alignItems","display","fontSize","top","left","transform","textAlign","description","flexBasis","link","paddingLeft","paddingRight","ProjectDemo","title","codeLink","siteLink","image","classes","src","alt","class","Projects","landingPageImage","minecraftImage","planImage","App","useState","tab","setTab","id","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9099d2eb.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className='main-text'>\r\n            <h1 className='header'>Hi, I am Sapir</h1>\r\n            I'm a fulllstack web developer based in Israel.\r\n                        I build websites and servers.\r\n                        I am pasionate about crafting great sites, and would love to create along with you.\r\n                I am open for job offers and projects.<br /><br />\r\n            Let's chat <a href=\"mailto:sapirm290@gmail.com\">sapirm290@gmail.com</a>\r\n            <br /><a href=\"https://github.com/sapirm290\">My Github </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\n// import styles from './ProjectDemo.module.css'\r\nimport { createUseStyles } from 'react-jss'\r\n\r\nconst useStyles = createUseStyles({\r\n    demo: {\r\n        padding: '5rem 1rem',\r\n        backgroundColor: '#999',\r\n        position: 'relative',\r\n        borderBottom: [1, 'solid', '#E4E4E4'],\r\n        '&:hover': {\r\n            '& img': {\r\n                opacity: 0.3,\r\n\r\n            },\r\n            '& div': {\r\n                opacity: 1,\r\n                color: '#333',\r\n                transition: '.5s ease'\r\n\r\n            },\r\n            '& a': {\r\n                opacity: 1,\r\n                color: 'teal',\r\n                transition: '.5s ease'\r\n\r\n            }\r\n        },\r\n        '& img': {\r\n            width: '100%',\r\n            maxWidth: '650px',\r\n            opacity: 1,\r\n            transition: '.5s ease',\r\n\r\n        },\r\n        '&:nth-child(even)': {\r\n            backgroundColor: '#F7F7F7'\r\n        },\r\n        '&:nth-child(odd)': {\r\n            backgroundColor: '#FFF'\r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n    text: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        width: '100%',\r\n        maxWidth: '650px',\r\n        fontSize: '2rem',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        '-ms-transform': 'translate(-50%, -50%)',\r\n        textAlign: 'center',\r\n        opacity: 0.1,\r\n        color: '#000'\r\n\r\n\r\n    },\r\n\r\n\r\n    description: {\r\n        flexBasis: '70%'\r\n    },\r\n\r\n    link: {\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem'\r\n\r\n    }\r\n})\r\n\r\nconst ProjectDemo = ({ title, description, codeLink, siteLink, image }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <figure className={classes.demo}>\r\n            <img className={classes.image} src={image} alt={'sample ' + title} />\r\n            <div className={classes.text}>\r\n                <p className={classes.description}>{description}</p>\r\n                <p ><a class={classes.link} href={codeLink}>\r\n                    Code</a> <a class={classes.link} href={siteLink}> Site</a></p>\r\n            </div>\r\n\r\n\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default ProjectDemo\r\n","import React, {Fragment} from 'react'\r\nimport ProjectDemo from './ProjectDemo/ProjectDemo'\r\nimport landingPageImage from '../media/landing-page.PNG'\r\nimport minecraftImage from '../media/minecraft.PNG'\r\nimport planImage from '../media/plan.PNG'\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <Fragment>\r\n        <div className='main-text'>\r\n            <h1 className='header'>What can I do for you?</h1>\r\n            <h2 className='sub-header'>I've worked with:</h2>\r\n            Front-end: HTML, CSS, JS, Jquery, Bootstrap, Material-UI, React, Redux<br />Back-end: Python, Django,\r\n            Django-rest. JavaScript, Node.js<br /> Databases: PostgreSQL, MySQl\r\n           \r\n        </div>\r\n\r\n        <div className=\"main-projects\">\r\n        <h2 className='sub-header'>Some of my work:</h2>\r\n\r\n        <ProjectDemo title='landing page' description='Basic HTML & CSS landing page' codeLink='https://github.com/sapirm290/Landing_page' siteLink='https://sapirm290.github.io/Landing_page/'  image={landingPageImage}/>\r\n         <ProjectDemo title='mini minecraft' description='A simple minecraft like game using JS' codeLink='https://github.com/sapirm290/Minecraft' siteLink='https://sapirm290.github.io/Minecraft/' image={minecraftImage} />\r\n         <ProjectDemo title='Todo app' description=' A full APP using React, Redux, Material UI for the front-end, and Python, Django, Django-rest, knox auth\r\n         for the back-end. hosted on Heroku' codeLink='https://github.com/sapirm290/planner' siteLink='https://arcane-cliffs-92152.herokuapp.com/?#/' image={planImage} />\r\n   \r\n        </div>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React, { useState } from 'react';\r\nimport './style.css'\r\nimport HomePage from './components/HomePage'\r\nimport Projects from './components/Projects'\r\nfunction App() {\r\n  const [tab, setTab] = useState('home')\r\n  return (\r\n    <div className=\"App\">\r\n      <nav>\r\n        <ul id='nav'>\r\n          <li class={`nav-item ${tab === 'home' ? 'pressed' : ''}`} onClick={() => { setTab('home') }}> Home</li>\r\n          <li class={`nav-item ${tab === 'projects' ? 'pressed' : ''}`} onClick={() => { setTab('projects') }}> Projects</li>\r\n        </ul>\r\n      </nav>\r\n      <main class=\"my-container\">\r\n        {tab === 'home' ? <HomePage /> : <Projects />}\r\n      </main>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/landing-page.dc5f0a76.PNG\";","module.exports = __webpack_public_path__ + \"static/media/minecraft.48274dcd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/plan.9abc870c.PNG\";"],"sourceRoot":""}